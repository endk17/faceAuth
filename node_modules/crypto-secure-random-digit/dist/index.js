"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
function randomDigit() {
    while (true) {
        const randomNumber = crypto_1.randomBytes(1).readUInt8(0);
        // If the random number is 200 or bigger - disregard it and try another random byte
        // This is because we do '% 10' later on, which would be biassed otherwise
        // See explanation: https://gist.github.com/joepie91/7105003c3b26e65efcea63f3db82dfba
        // A random byte has 256 possible values, as long as we stick to the first 200 (that is 0 - 199 inclusive)
        // we can be sure the distribution of possible last digits (which you get by % 10) is evenly spread
        if (randomNumber >= 200) {
            continue;
        }
        return randomNumber % 10;
    }
}
exports.randomDigit = randomDigit;
function randomDigits(nr) {
    return [...Array(nr)].map(() => randomDigit());
}
exports.randomDigits = randomDigits;
